import telebot
from settings import TOKEN
import re

bot = telebot.TeleBot(TOKEN)

def get_keyboard():
    keyboard = telebot.types.ReplyKeyboardMarkup(True)
    keyboard.row('/fortune','/btc','/plus')
    return keyboard

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –Ø - –±–æ—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Å–∏–≥–Ω–∞–ª–æ–≤, –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö —É–∫–∞–∑–∞–Ω—ã –∫–∞–Ω–∞–ª—ã —Å –∫–æ—Ç–æ—Ä—ã—Ö —è –º–æ–≥—É –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å–∏–≥–Ω–∞–ª—ã. –ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ —Å–∫–∏–Ω—É—Ç—å —Å–∏–≥–Ω–∞–ª –Ω–µ–∑–∞–±—É–¥—å –≤—ã–±—Ä–∞—Ç—å –∫–∞–Ω–∞–ª', reply_markup=get_keyboard())

@bot.message_handler(commands=['fortune']) # –û–ë–†–ê–ë–û–¢–ö–ê –°–ò–ì–ù–ê–õ–ê –° –ö–ê–ù–ê–õ–ê FORTUNE CRYPTO
def fortune_message(message):
    signal = bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å —Å–∫–∏–Ω—å—Ç–µ —Å–∏–≥–Ω–∞–ª —Å –∫–∞–Ω–∞–ª–∞ FORTUNE CRYPTO üßø')
    bot.register_next_step_handler(signal, output)

def output(message):
    input = message.text
    try:
        # –†–ï–ì–£–õ–Ø–†–ö–ê –ü–û –°–ò–ì–ù–ê–õ–ê–ú –§–û–†–¢–£–ù–´
        # –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –º–æ–Ω–µ—Ç—ã
        pattern = r'\w+'
        res = re.search(pattern, input)
        coin = res[0]

        # –ø–æ–ª—É—á–µ–Ω–∏—è –≤ –∫–∞–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —Å–¥–µ–ª–∫—É
        pattern = r'\(\w+\)' 
        res = re.search(pattern, input)
        order = res[0][1:-1]

        # —Ü–µ–Ω–∞ –≤—Ö–æ–¥–∞ –≤ —Å–¥–µ–ª–∫—É
        pattern1 = r'Entry+.+' #–ø–æ–∫–∞ —á—Ç–æ –ø–∞–Ω–∞—Ü–µ—è, –µ—Å–ª–∏ –ø–æ–ª—É—á–∏—Ç—Å—è —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –ø–æ –∞–π–¥–∏ –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–∞–Ω–∞–ª–∞ –±—É–¥–µ—Ç –∫—Ä—É—Ç–æ
        res = re.search(pattern1, input)
        entry = res[0][0:-2].replace('Entry', '').replace(':', '').replace(' ', '')

        # –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–ª–µ–π
        pattern = r'Targets+.+\n.+' 
        res = re.search(pattern, input)
        targets = res[0][10:]

        # –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–æ–ø –ª–æ—Å—Å–∞
        pattern = r'Stoploss+.+' 
        res = re.search(pattern, input)
        sp = res[0][10:-2]

        # –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–µ—á–∞
        pattern = r'Leverage+.+\n.+' 
        res = re.search(pattern, input)
        leverage = res[0][16:-20]
        output = f'''
#{coin}
–í—Ö–æ–¥ –≤ —Å–¥–µ–ª–∫—É {order}:{coin}USDT
–¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: {entry}
–¶–µ–ª–∏: {targets}
–°—Ç–æ–ø –ª–æ—Å—Å: {sp}

–ü–ª–µ—á–æ: {leverage}
'''
        bot.send_message(message.chat.id, output)
    except:
        bot.send_message(message.chat.id, "–í—ã —Å–¥–µ–ª–∞–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ /start")

@bot.message_handler(commands=['btc']) # –û–ë–†–ê–ë–û–¢–ö–ê –°–ò–ì–ù–ê–õ–ê –° –ö–ê–ù–ê–õ–ê SIGNALS BTC AND ALTS
def btc_message(message):
    signal = bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏—Ç–µ —Å–∏–≥–Ω–∞–ª —Å –∫–∞–Ω–∞–ª–∞ SIGNALS BTC AND ALTS")
    bot.register_next_step_handler(signal, outputbtc)

def outputbtc(message):
    input = message.text
    try:
        # –†–ï–ì–£–õ–Ø–†–ö–ê –ü–û –ë–¢–° –ê–õ–¢–°
        # –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –º–æ–Ω–µ—Ç—ã
        pattern = r'\w+'
        res = re.search(pattern, input)
        coin = res[0].upper()

        # –ø–æ–ª—É—á–µ–Ω–∏—è –≤ –∫–∞–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —Å–¥–µ–ª–∫—É
        pattern = r'.+' 
        res = re.search(pattern, input)
        order = res[0].split()[1].upper()

        # —Ü–µ–Ω–∞ –≤—Ö–æ–¥–∞
        entry = '–ø–æ —Ä—ã–Ω–∫—É'

        # –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–ª–µ–π
        pattern = r'Targets+.+' 
        res = re.search(pattern, input)
        targets = res[0].replace('Targets', '').replace(' ', '')

        # –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–æ–ø –ª–æ—Å—Å–∞
        pattern = r'Stop+.+' 
        res = re.search(pattern, input)
        sp = res[0].replace('Stop', '').replace(' ', '')

        # –ø–ª–µ—á–æ
        leverage = "10x"

        output = f'''
#{coin}
–í—Ö–æ–¥ –≤ —Å–¥–µ–ª–∫—É {order}:{coin}USDT
–¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: {entry}
–¶–µ–ª–∏: {targets}
–°—Ç–æ–ø –ª–æ—Å—Å: {sp}

–ü–ª–µ—á–æ: {leverage}
'''
        bot.send_message(message.chat.id, output)
    except:
        bot.send_message(message.chat.id, "–í—ã —Å–¥–µ–ª–∞–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")

@bot.message_handler(commands=['plus']) # –û–ë–†–ê–ë–û–¢–ö–ê –°–ò–ì–ù–ê–õ–ê –° –ö–ê–ù–ê–õ–ê Trading Plus
def btc_message(message):
    signal = bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏—Ç–µ —Å–∏–≥–Ω–∞–ª —Å –∫–∞–Ω–∞–ª–∞ Trading Plus")
    bot.register_next_step_handler(signal, outputplus)

def outputplus(message):
    input = message.text
    try:
        # –†–ï–ì–£–õ–Ø–†–ö–ê –ü–û –¢–†–≠–ô–î–ò–ù–ì –ü–õ–Æ–°
        # –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –º–æ–Ω–µ—Ç—ã
        pattern = r'–¢–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞+.+'
        res = re.search(pattern, input)
        coin = res[0].replace("–¢–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞: ", '').replace("/USDT", '')

        # –ø–æ–ª—É—á–µ–Ω–∏—è –≤ –∫–∞–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —Å–¥–µ–ª–∫—É
        pattern = r'\n\n\w+'
        res = re.search(pattern, input)
        order = res[0].replace("\n", "")

        # —Ü–µ–Ω–∞ –≤—Ö–æ–¥–∞ –≤ —Å–¥–µ–ª–∫—É
        pattern1 = r'–í—Ö–æ–¥+.+'
        res = re.search(pattern1, input)
        entry = res[0].replace('–í—Ö–æ–¥', '').replace(':', '').replace(' ', '')

        # –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–ª–µ–π
        pattern1 = r'\d-—è —Ü–µ–ª—å+.+\n.+' 
        pattern2 = r'–¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç+.+\n.+' 
        res1 = re.search(pattern1, input)
        res2 = re.search(pattern2, input)
        res2 = res2[0].replace("–¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç: ", "").replace("–°—Ç–æ–ø-–ª–æ—Å—Å: –ø–æ —É—Å–º–æ—Ç—Ä–µ–Ω–∏—é", "").replace("\n", "")
        order2 = res2
        order1 = res1[0].replace("1-—è", "").replace("2-—è", "").replace(" —Ü–µ–ª—å - ", "").replace("\n", " - ")
        targets = str(order1) + ' - ' + str(order2)


        # –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–æ–ø –ª–æ—Å—Å–∞
        pattern = r'–°—Ç–æ–ø-–ª–æ—Å—Å+.+' 
        res = re.search(pattern, input)
        sp = res[0].replace("–°—Ç–æ–ø-–ª–æ—Å—Å: ", "")

        # –ø–ª–µ—á–æ
        leverage = "10x"

        output = f'''
#{coin}
–í—Ö–æ–¥ –≤ —Å–¥–µ–ª–∫—É {order}:{coin}USDT
–¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: {entry}
–¶–µ–ª–∏: {targets}
–°—Ç–æ–ø –ª–æ—Å—Å: {sp}

–ü–ª–µ—á–æ: {leverage}
'''
        bot.send_message(message.chat.id, output)
    except:
        bot.send_message(message.chat.id, "–í—ã —Å–¥–µ–ª–∞–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")

bot.polling(none_stop=True, interval=0)















































'''
@bot.message_handler(func=lambda message: message.text == '–§–æ—Ä—Ç—É–Ω–∞')
def signals(message):
    input = message.text
    try:
        # –†–ï–ì–£–õ–Ø–†–ö–ê –ü–û –°–ò–ì–ù–ê–õ–ê–ú –§–û–†–¢–£–ù–´
        # –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –º–æ–Ω–µ—Ç—ã
        pattern = r'\w+'
        res = re.search(pattern, input)
        coin = res[0]

        # –ø–æ–ª—É—á–µ–Ω–∏—è –≤ –∫–∞–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —Å–¥–µ–ª–∫—É
        pattern = r'\(\w+\)' 
        res = re.search(pattern, input)
        order = res[0][1:-1]

        # —Ü–µ–Ω–∞ –≤—Ö–æ–¥–∞ –≤ —Å–¥–µ–ª–∫—É
        pattern1 = r'Entry+.+' #–ø–æ–∫–∞ —á—Ç–æ –ø–∞–Ω–∞—Ü–µ—è, –µ—Å–ª–∏ –ø–æ–ª—É—á–∏—Ç—Å—è —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –ø–æ –∞–π–¥–∏ –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–∞–Ω–∞–ª–∞ –±—É–¥–µ—Ç –∫—Ä—É—Ç–æ
        res = re.search(pattern1, input)
        entry = res[0][0:-2].replace('Entry', '').replace(':', '').replace(' ', '')

        # –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–ª–µ–π
        pattern = r'Targets+.+\n.+' 
        res = re.search(pattern, input)
        targets = res[0][10:]

        # –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–æ–ø –ª–æ—Å—Å–∞
        pattern = r'Stoploss+.+' 
        res = re.search(pattern, input)
        sp = res[0][10:-2]

        # –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–µ—á–∞
        pattern = r'Leverage+.+\n.+' 
        res = re.search(pattern, input)
        leverage = res[0][16:-20]

        output = f''''''
#{coin}
–í—Ö–æ–¥ –≤ —Å–¥–µ–ª–∫—É {order}:{coin}USDT
–¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: {entry}
–¶–µ–ª–∏: {targets}
–°—Ç–æ–ø –ª–æ—Å—Å: {sp}

–ü–ª–µ—á–æ: {leverage}
        ''''''

        bot.send_message(message.chat.id, output)
    except:
        bot.send_message(message.chat.id, "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –≤—ã —Å–¥–µ–ª–∞–ª–∏ —á—Ç–æ-–Ω–µ —Ç–æ")

@bot.message_handler(func=lambda message: message.text == '–ë—Ç—Å –∞–ª—å—Ç—Å')
def signals(message):
    input = message.text
    try:
        # –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –º–æ–Ω–µ—Ç—ã
        pattern = r'\w+'
        res = re.search(pattern, input)
        coin = res[0]

        # –ø–æ–ª—É—á–µ–Ω–∏—è –≤ –∫–∞–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —Å–¥–µ–ª–∫—É
        pattern = r'.+' 
        res = re.search(pattern, input)
        order = res[0].split()[1].upper()

        # —Ü–µ–Ω–∞ –≤—Ö–æ–¥–∞
        entry = '–ø–æ —Ä—ã–Ω–∫—É'

        # –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–ª–µ–π
        pattern = r'Targets+.+' 
        res = re.search(pattern, input)
        targets = res[0].replace('Targets', '').replace(' ', '')

        # –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–æ–ø –ª–æ—Å—Å–∞
        pattern = r'Stop+.+' 
        res = re.search(pattern, input)
        sp = res[0].replace('Stop', '').replace(' ', '')

        # –ø–ª–µ—á–æ
        leverage = "10x"


        output = f''''''
#{coin}
–í—Ö–æ–¥ –≤ —Å–¥–µ–ª–∫—É {order}:{coin}USDT
–¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: {entry}
–¶–µ–ª–∏: {targets}
–°—Ç–æ–ø –ª–æ—Å—Å: {sp}

–ü–ª–µ—á–æ: {leverage}
        ''''''

        bot.send_message(message.chat.id, output)
    except:
        bot.send_message(message.chat.id, "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –≤—ã —Å–¥–µ–ª–∞–ª–∏ —á—Ç–æ-–Ω–µ —Ç–æ")

@bot.message_handler(func=lambda message: message.text == '–¢—Ä–µ–π–¥–∏–Ω–≥ –ø–ª—é—Å')
def signals(message):
    input = message.text
    try:
        # –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –º–æ–Ω–µ—Ç—ã
        pattern = r'–¢–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞+.+'
        res = re.search(pattern, input)
        coin = res[0].replace("–¢–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞: ", '').replace("/USDT", '')

        # –ø–æ–ª—É—á–µ–Ω–∏—è –≤ –∫–∞–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —Å–¥–µ–ª–∫—É
        pattern = r'\n\n\w+'
        res = re.search(pattern, input)
        order = res[0].replace("\n", "")

        # —Ü–µ–Ω–∞ –≤—Ö–æ–¥–∞ –≤ —Å–¥–µ–ª–∫—É
        pattern1 = r'–í—Ö–æ–¥+.+'
        res = re.search(pattern1, input)
        entry = res[0].replace('–í—Ö–æ–¥', '').replace(':', '').replace(' ', '')

        # –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–ª–µ–π
        pattern1 = r'\d-—è —Ü–µ–ª—å+.+\n.+' 
        pattern2 = r'–¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç+.+\n.+' 
        res2 = re.search(pattern2, input)
        res1 = re.search(pattern1, input)
        res2 = res2[0].replace("–¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç: ", "")
        order2 = res2[:3]
        order1 = res1[0].replace("1-—è", "").replace("2-—è", "").replace(" —Ü–µ–ª—å - ", "").replace("\n", " - ")
        targets = str(order1) + ' - ' + str(order2)


        # –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–æ–ø –ª–æ—Å—Å–∞
        pattern = r'–°—Ç–æ–ø-–ª–æ—Å—Å+.+' 
        res = re.search(pattern, input)
        sp = res[0].replace("–°—Ç–æ–ø-–ª–æ—Å—Å: ", "")

        # –ø–ª–µ—á–æ
        leverage = "10x"


        output = f''''''
#{coin}
–í—Ö–æ–¥ –≤ —Å–¥–µ–ª–∫—É {order}:{coin}USDT
–¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: {entry}
–¶–µ–ª–∏: {targets}
–°—Ç–æ–ø –ª–æ—Å—Å: {sp}

–ü–ª–µ—á–æ: {leverage}
        ''''''

        bot.send_message(message.chat.id, output)
    except:
        bot.send_message(message.chat.id, "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –≤—ã —Å–¥–µ–ª–∞–ª–∏ —á—Ç–æ-–Ω–µ —Ç–æ")


'''